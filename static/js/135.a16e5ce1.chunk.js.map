{"version":3,"file":"static/js/135.a16e5ce1.chunk.js","mappings":"uQACA,GAAgB,WAAa,iCAAiC,aAAe,mCAAmC,iBAAmB,uCAAuC,QAAU,8BAA8B,WAAa,kC,SCyF/N,EAjFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,mCAAG,WAAML,GAAN,iGAEMM,EAAAA,EAAAA,IAAa,QAASN,GAF5B,OAEfG,EAFe,OAGrBC,EAAgBD,GAHK,mIAAH,uDAStBI,EAAAA,EAAAA,YAAU,WACRF,EAAiBL,EAClB,GAAE,CAACA,IAEJ,IAAMQ,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,UAACH,EAASI,MAAMC,YAAhB,QAAwB,KAE/C,OACEV,IACE,iBAAKW,UAAWC,EAAAA,eAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,SAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,KAAMR,EAASS,WACnC,gBACEL,UAAWC,EAAAA,WACXK,IA7BK,mCA6BQ,oBAASjB,EAAakB,cACnCC,IAAKnB,EAAaoB,QAEpB,iBAAKT,UAAWC,EAAAA,iBAAhB,WACE,wBACGZ,EAAaqB,eAAb,UACMrB,EAAaqB,gBADnB,UAEMrB,EAAac,SAEtB,wCAAgBd,EAAasB,aAA7B,QACA,sCACA,uBAAItB,EAAauB,YACjB,oCACA,sCAC2BC,IAAxBxB,EAAayB,cADhB,QAEIzB,EAAayB,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGb,IAAP,IAAac,KAAK,eAIpD,iBAAKjB,UAAWC,EAAAA,WAAhB,WACE,SAAC,KAAD,CAASH,MAAO,CAAEF,SAAAA,GAAYI,UAAWC,EAAAA,QAAaiB,GAAG,OAAzD,mBAGA,SAAC,KAAD,CAASpB,MAAO,CAAEF,SAAAA,GAAYI,UAAWC,EAAAA,QAAaiB,GAAG,UAAzD,yBAIF,SAAC,KAAD,MAIP,C,+LClEKC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,WAAOC,EAAWC,EAAOC,GAAzB,uFACJJ,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJC,EADI,oBACaJ,EADb,iBACyBK,IAFrB,cACrBC,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,0DAObnC,EAAY,mCAAG,WAAO8B,EAAWpC,GAAlB,uFACHkC,EAAAA,EAAAA,IAAA,WAAcE,EAAd,YAA2BpC,EAA3B,oBAA8CiC,IAD3C,cACpBM,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,wDAKZE,EAAY,mCAAG,WAAON,EAAWpC,GAAlB,uFACHkC,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJpC,EADI,4BACuBiC,IAFpB,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZG,EAAY,mCAAG,WAAOP,EAAWpC,GAAlB,uFACHkC,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJpC,EADI,4BACuBiC,IAFpB,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZI,EAAY,mCAAG,WAAOP,EAAOC,GAAd,uFACHJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBI,EADjB,iBAC+BC,IAF5B,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,uD","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"detailsImg\":\"MovieDetails_detailsImg__lRC61\",\"movieWrapper\":\"MovieDetails_movieWrapper__u2mNI\",\"movieDescription\":\"MovieDetails_movieDescription__Gu3H0\",\"navlink\":\"MovieDetails_navlink__+koUm\",\"navigation\":\"MovieDetails_navigation__ySN5l\"};","import { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchDetails } from 'services/api';\nimport Button from 'components/Button/Button';\nimport css from './MovieDetails.module.css';\n\nconst photoUrl = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n\n  const fetchDetailsData = async movieId => {\n    try {\n      const movieDetails = await fetchDetails('movie', movieId);\n      setMovieDetails(movieDetails);\n    } catch (error) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    fetchDetailsData(movieId);\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLink = useRef(location.state.from ?? '/');\n\n  return (\n    movieDetails && (\n      <div className={css.detailsWrapper}>\n        <div className={css.movieWrapper}>\n          <Button name=\"back\" path={backLink.current}></Button>\n          <img\n            className={css.detailsImg}\n            src={photoUrl + `${`${movieDetails.poster_path}`}`}\n            alt={movieDetails.tags}\n          ></img>\n          <div className={css.movieDescription}>\n            <h1>\n              {movieDetails.original_title\n                ? `${movieDetails.original_title}`\n                : `${movieDetails.name}`}\n            </h1>\n            <p>User Score: {movieDetails.vote_average}%</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {movieDetails.genres !== undefined ??\n                movieDetails.genres.map(el => el.name).join(', ')}\n            </p>\n          </div>\n        </div>\n        <div className={css.navigation}>\n          <NavLink state={{ backLink }} className={css.navlink} to=\"cast\">\n            cast\n          </NavLink>\n          <NavLink state={{ backLink }} className={css.navlink} to=\"reviews\">\n            reviews\n          </NavLink>\n        </div>\n        <Outlet />\n      </div>\n    )\n  );\n};\n\nMovieDetails.propTypes = {\n  fetchDetailsData: PropTypes.func,\n  movies: PropTypes.arrayOf(\n    PropTypes.objectOf({\n      id: PropTypes.number,\n      original_title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  movieDetails: PropTypes.arrayOf(\n    PropTypes.objectOf({\n      backdrop_path: PropTypes.string,\n      poste_path: PropTypes.string,\n      original_title: PropTypes.string,\n      name: PropTypes.string,\n      vote_average: PropTypes.number,\n      genres: PropTypes.arrayOf(PropTypes.objectOf({ name: PropTypes.string })),\n    })\n  ),\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst KEY = 'e49decb7b714a95bd454096b6ce610cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async (queryType, query, page) => {\n  const response = await axios.get(\n    `/${queryType}/${query}?api_key=${KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async (queryType, movieId) => {\n  const response = await axios.get(`/${queryType}/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchCredits = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchByQuery = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","fetchDetailsData","fetchDetails","useEffect","location","useLocation","backLink","useRef","state","from","className","css","Button","name","path","current","src","poster_path","alt","tags","original_title","vote_average","overview","undefined","genres","map","el","join","to","KEY","axios","fetchTrending","queryType","query","page","response","data","results","fetchCredits","fetchReviews","fetchByQuery"],"sourceRoot":""}