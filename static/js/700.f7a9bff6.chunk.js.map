{"version":3,"file":"static/js/700.f7a9bff6.chunk.js","mappings":"sPACA,GAAgB,IAAM,wB,SCwDtB,EAjDkB,WAChB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,YAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAgB,mCAAG,WAAML,GAAN,iGAEMM,EAAAA,EAAAA,IAAa,QAASN,GAF5B,cAEfG,EAFe,yBAGdC,EAAgBD,IAHF,mHAAH,sDAatB,OAJAI,EAAAA,EAAAA,YAAU,WACRF,EAAiBL,EAClB,GAAE,CAACA,SAGeQ,IAAjBL,IACE,gBAAKM,UAAWC,EAAAA,YAAhB,SACGP,EAAaQ,KAAKC,KAAI,SAAAC,GAAK,OAC1B,oBAAQJ,UAAWC,EAAAA,OAAnB,WACE,gBACED,UAAWC,EAAAA,IACXI,IAAKD,EAAME,UACXC,IA3BA,mCA2BU,UAAMH,EAAMI,iBAExB,wBAAYR,UAAWC,EAAAA,WAAvB,WACE,eAAGD,UAAWC,EAAAA,EAAd,yBAAkCG,EAAMK,kBACxC,eAAGT,UAAWC,EAAAA,EAAd,wBAAiCG,EAAME,kBATjB,KAgBnC,C,+LC3CKI,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,WAAOC,EAAWC,EAAOC,GAAzB,uFACJJ,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJC,EADI,oBACaJ,EADb,iBACyBK,IAFrB,cACrBC,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,0DAObC,EAAY,mCAAG,WAAON,EAAWtB,GAAlB,uFACHoB,EAAAA,EAAAA,IAAA,WAAcE,EAAd,YAA2BtB,EAA3B,oBAA8CmB,IAD3C,cACpBM,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,wDAKZpB,EAAY,mCAAG,WAAOgB,EAAWtB,GAAlB,uFACHoB,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJtB,EADI,4BACuBmB,IAFpB,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZG,EAAY,mCAAG,WAAOP,EAAWtB,GAAlB,uFACHoB,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJtB,EADI,4BACuBmB,IAFpB,cACpBM,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZI,EAAY,mCAAG,WAAOP,EAAOC,GAAd,uFACHJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBI,EADjB,iBAC+BC,IAF5B,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,uD","sources":["webpack://react-homework-template/./src/pages/MovieCast/MovieCast.module.css?a7d2","pages/MovieCast/MovieCast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieCast_img__CoKZ-\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchCredits } from 'services/api';\nimport css from './MovieCast.module.css';\n\nconst photo = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [movieCredits, setMovieCredits] = useState();\n\n  const fetchCreditsData = async movieId => {\n    try {\n      const movieCredits = await fetchCredits('movie', movieId);\n      return setMovieCredits(movieCredits);\n    } catch (error) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    fetchCreditsData(movieId);\n  }, [movieId]);\n\n  return (\n    movieCredits !== undefined && (\n      <div className={css.castWrapper}>\n        {movieCredits.cast.map(actor => (\n          <figure className={css.figure}>\n            <img\n              className={css.img}\n              alt={actor.character}\n              src={photo + `${actor.profile_path}`}\n            ></img>\n            <figcaption className={css.figcaption}>\n              <p className={css.p}>Actor name: {actor.original_name}</p>\n              <p className={css.p}>Character: {actor.character}</p>\n            </figcaption>\n          </figure>\n        ))}\n      </div>\n    )\n  );\n};\n\nMovieCast.propTypes = {\n  fetchCreditsData: PropTypes.func,\n  movieCredits: PropTypes.arrayOf(\n    PropTypes.objectOf({\n      profile_path: PropTypes.string,\n      original_name: PropTypes.string,\n      character: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieCast;\n","import axios from 'axios';\nconst KEY = 'e49decb7b714a95bd454096b6ce610cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async (queryType, query, page) => {\n  const response = await axios.get(\n    `/${queryType}/${query}?api_key=${KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async (queryType, movieId) => {\n  const response = await axios.get(`/${queryType}/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchCredits = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchByQuery = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","movieCredits","setMovieCredits","fetchCreditsData","fetchCredits","useEffect","undefined","className","css","cast","map","actor","alt","character","src","profile_path","original_name","KEY","axios","fetchTrending","queryType","query","page","response","data","results","fetchDetails","fetchReviews","fetchByQuery"],"sourceRoot":""}