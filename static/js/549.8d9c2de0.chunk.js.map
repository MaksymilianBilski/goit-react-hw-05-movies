{"version":3,"file":"static/js/549.8d9c2de0.chunk.js","mappings":"8PACA,EAAuB,qBAAvB,EAAuD,yBAAvD,EAA0F,wBAA1F,EAA+H,2BAA/H,EAAkK,sBAAlK,EAAiM,uB,SCuEjM,EAlEqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,mCAAG,WAAOC,EAAOC,GAAd,iGAEKC,EAAAA,EAAAA,IAAaF,EAAOC,GAFzB,OAEbJ,EAFa,OAGnBC,EAAaD,GAHM,uGAAH,wDAcpB,OACE,4BACE,0BACE,kBAAMM,UAAWC,EAAgBC,SAVtB,SAAAC,GACfA,EAAIC,iBACJ,IAAMC,EAAQF,EAAIG,OAAOC,OAAOC,MAChChB,EAAgB,SAAWa,GAC3BT,EAAeS,EAAO,EACvB,EAKK,WACE,kBACEL,UAAWC,EACXQ,KAAK,SACLC,YAAY,qBAEd,mBAAQV,UAAWC,EAAYU,KAAK,SAApC,+BAKWC,IAAdlB,GAA2BA,EAAUmB,OAAS,IAC7C,eAAIb,UAAWC,EAAf,SACGP,EAAUoB,KAAI,SAAAC,GAAE,OACf,eAAIf,UAAWC,EAAf,UACE,SAAC,KAAD,CACEe,MAAO,CAAEC,KAAM7B,EAAS8B,SAAW,IAAM3B,GACzCS,UAAWC,EACXkB,GAAE,kBAAaJ,EAAGK,IAHpB,cAKeR,IAAZG,EAAGN,KAAqBM,EAAGN,KAAOM,EAAGM,kBANRN,EAAGK,GADtB,QAe1B,C,+LCxDKE,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,WAAOC,EAAW5B,EAAOC,GAAzB,uFACJyB,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJ5B,EADI,oBACayB,EADb,iBACyBxB,IAFrB,cACrB4B,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,0DAObC,EAAY,mCAAG,WAAOJ,EAAWK,GAAlB,uFACHP,EAAAA,EAAAA,IAAA,WAAcE,EAAd,YAA2BK,EAA3B,oBAA8CR,IAD3C,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,wDAKZI,EAAY,mCAAG,WAAON,EAAWK,GAAlB,uFACHP,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJK,EADI,4BACuBR,IAFpB,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZK,EAAY,mCAAG,WAAOP,EAAWK,GAAlB,uFACHP,EAAAA,EAAAA,IAAA,WACjBE,EADiB,YACJK,EADI,4BACuBR,IAFpB,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZ5B,EAAY,mCAAG,WAAOF,EAAOC,GAAd,uFACHyB,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACiBzB,EADjB,iBAC+BC,IAF5B,cACpB4B,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,uD","sources":["webpack://react-homework-template/./src/pages/SearchMovies/Movies.module.css?c7f9","pages/SearchMovies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__RtuV9\",\"listItem\":\"Movies_listItem__St3CA\",\"navlink\":\"Movies_navlink__1FMS-\",\"searchForm\":\"Movies_searchForm__KFfMi\",\"input\":\"Movies_input__BmE2i\",\"button\":\"Movies_button__krwnX\"};","import { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchByQuery } from 'services/api';\nimport css from './Movies.module.css';\n\nconst SearchMovies = () => {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [queryData, setQueryData] = useState();\n\n  const fetchQueryData = async (query, page) => {\n    try {\n      const queryData = await fetchByQuery(query, page);\n      setQueryData(queryData);\n    } catch (error) {}\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const input = evt.target.search.value;\n    setSearchParams('query=' + input);\n    fetchQueryData(input, 1);\n  };\n\n  return (\n    <div>\n      <div>\n        <form className={css.searchForm} onSubmit={onSubmit}>\n          <input\n            className={css.input}\n            name=\"search\"\n            placeholder=\"type movie name\"\n          ></input>\n          <button className={css.button} type=\"submit\">\n            confirm\n          </button>\n        </form>\n      </div>\n      {queryData !== undefined && queryData.length > 0 && (\n        <ul className={css.list}>\n          {queryData.map(el => (\n            <li className={css.listItem} key={el.id}>\n              <NavLink\n                state={{ from: location.pathname + '&' + searchParams }}\n                className={css.navlink}\n                to={`/movies/${el.id}`}\n              >\n                {el.name !== undefined ? el.name : el.original_title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSearchMovies.propTypes = {\n  queryData: PropTypes.arrayOf(\n    PropTypes.objectOf({\n      id: PropTypes.number,\n      original_title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  inputValue: PropTypes.string,\n  fetchQueryData: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\nconst KEY = 'e49decb7b714a95bd454096b6ce610cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async (queryType, query, page) => {\n  const response = await axios.get(\n    `/${queryType}/${query}?api_key=${KEY}&page=${page}`\n  );\n  return response.data.results;\n};\n\nexport const fetchDetails = async (queryType, movieId) => {\n  const response = await axios.get(`/${queryType}/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchCredits = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/credits?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchReviews = async (queryType, movieId) => {\n  const response = await axios.get(\n    `/${queryType}/${movieId}/reviews?api_key=${KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchByQuery = async (query, page) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&page=${page}`\n  );\n  return response.data.results;\n};\n"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","useState","queryData","setQueryData","fetchQueryData","query","page","fetchByQuery","className","css","onSubmit","evt","preventDefault","input","target","search","value","name","placeholder","type","undefined","length","map","el","state","from","pathname","to","id","original_title","KEY","axios","fetchTrending","queryType","response","data","results","fetchDetails","movieId","fetchCredits","fetchReviews"],"sourceRoot":""}